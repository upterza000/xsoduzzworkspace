const GameCardGenerator = require('./gameCardGenerator');
const TelegramGameBot = require('./telegramBot');

async function updateAndTestNewVersion() {
    console.log('üöÄ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà...');
    console.log('üìÖ Date: September 25, 2025');
    
    const generator = new GameCardGenerator();
    const telegramBot = new TelegramGameBot();
    
    try {
        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏≤‡∏¢‡πÉ‡∏ö
        const testGames = [
            'Fortune Dragon',
            'Piggy Gold', 
            'Jewels of Prosperity',
            'Dragon Hatch',
            'Zombie Outbreak'
        ];
        
        console.log('\nüéÆ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö 5 ‡πÉ‡∏ö...');
        
        const cardsData = [];
        
        for (let i = 0; i < testGames.length; i++) {
            const gameName = testGames[i];
            const fullGameData = generator.generateRandomGameData(gameName);
            
            console.log(`\nüìä ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ó‡∏µ‡πà ${i+1}: ${gameName}`);
            console.log(`   - RTP: ${fullGameData.rtp}%`);
            console.log(`   - ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏ä‡∏ô‡∏∞: ${fullGameData.winRate}%`);
            
            const screenshot = await generator.generateCard(fullGameData);
            const filename = `updated_v2_${i+1}_${gameName.replace(/\s+/g, '_')}.png`;
            const filePath = await generator.saveCard(screenshot, filename);
            
            cardsData.push({
                ...fullGameData,
                imagePath: filePath
            });
            
            console.log(`   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß: ${filename}`);
        }
        
        console.log('\nüéØ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ:');
        console.log('üì¶ ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå: 80x80px (‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á 20%)');
        console.log('üñºÔ∏è ‡∏Ç‡∏ô‡∏≤‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ: 76x76px (‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á 21%)');
        console.log('üîò Padding ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö: 1px');
        console.log('üé® Border-radius ‡πÉ‡∏´‡∏°‡πà: 8px (container), 6px (logo)');
        console.log('üíØ ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏ä‡∏ô‡∏∞: 90-98.5% (90%+ guaranteed)');
        console.log('üéØ ‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏≤‡∏á: Flexbox perfect center');
        console.log('‚ú® ‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö: ‡πÑ‡∏°‡πà‡∏ö‡∏î‡∏ö‡∏±‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤');
        
        console.log('\nüìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á:');
        const stats = cardsData.map(card => ({
            game: card.gameName,
            rtp: card.rtp,
            winRate: card.winRate,
            multiplier: card.maxMultiplier
        }));
        
        console.table(stats);
        
        console.log('\nü§ñ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á Telegram Channel:');
        console.log('‚Ä¢ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏´‡∏•‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô');
        console.log('‚Ä¢ ‡∏°‡∏µ delay 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô spam');
        console.log('‚Ä¢ Caption ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏° emoji');
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á caption
        console.log('\nüìù ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Caption:');
        const sampleCaption = telegramBot.generateCaption(cardsData[0]);
        console.log(sampleCaption);
        
        console.log('\n‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!');
        console.log('üéâ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß');
        
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
    }
    
    process.exit(0);
}

updateAndTestNewVersion();